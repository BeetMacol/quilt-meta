import com.diffplug.gradle.spotless.JavaExtension

plugins {
    id 'java'
	id 'maven'
	id 'maven-publish'
	id 'application'
	id 'com.diffplug.spotless' version '5.8.2'
}

group = "org.quiltmc"
version = "1.2.0"

def ENV = System.getenv()
version = version + (ENV.GITHUB_ACTIONS ? "" : "+local")

sourceCompatibility = 1.8
targetCompatibility = 1.8

archivesBaseName = "quilt-meta"

repositories {
    mavenCentral()
}

dependencies {
	implementation "com.google.code.gson:gson:2.8.6"
	implementation "io.javalin:javalin:3.13.3"
	implementation "org.slf4j:slf4j-simple:1.7.30"
	implementation "commons-io:commons-io:2.8.0"
}

spotless {
	java {
		// Use comma separator for openjdk like license headers
		licenseHeaderFile("codeformat/HEADER").yearSeparator(", ")

		// Exclude inherited files from fabric from regular header
		targetExclude("/src/main/net/fabricmc/**/*.java")

		ratchetFrom "origin/master"
	}

	format "java-fabric-inheirted", JavaExtension, {
		// Use comma separator for openjdk like license headers
		licenseHeaderFile("codeformat/FABRIC-HEADER").yearSeparator(", ")

		// Only target inherited files
		target("/src/main/net/fabricmc/**/*.java")

		ratchetFrom "origin/master"
	}
}

application {
	mainClass = "org.quiltmc.meta.QuiltMeta"
}

jar {
	from {
		configurations.runtimeClasspath.collect {
			it.isDirectory() ? it : zipTree(it)
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"

	if (JavaVersion.current().isJava9Compatible()) {
		options.release = 8
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			groupId project.group
			artifactId project.archivesBaseName
			version project.version

			artifact jar
		}
	}

	repositories {
		if (ENV.MAVEN_URL) {
			maven {
				url ENV.MAVEN_URL

				credentials {
					username ENV.MAVEN_USERNAME
					password ENV.MAVEN_PASSWORD
				}
			}
		}
	}
}
